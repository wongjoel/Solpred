# Container buildfile for solpred
# This is an apptainer buildfile
# sudo apptainer build solpred.sif build.def

Bootstrap: docker
From: nvidia/cuda:11.7.0-runtime-ubuntu22.04

%setup
    # Make bind targets
    mkdir ${SINGULARITY_ROOTFS}/app
    mkdir ${SINGULARITY_ROOTFS}/data
    mkdir ${SINGULARITY_ROOTFS}/work
    mkdir ${SINGULARITY_ROOTFS}/results
    mkdir ${SINGULARITY_ROOTFS}/output
    mkdir ${SINGULARITY_ROOTFS}/installfiles

%files
    ./requirements.txt /installfiles

%environment
    export PYENV_ROOT="/installfiles/.pyenv"
    export PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"

%post
    echo "post"
    cd /installfiles

    export CLOJURE_TOOLS_VERSION=1.11.1.1113
    
    # Set Timezone (to stop interactive prompts during apt update)
    export TZ=Australia/Sydney
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

    # Install clojure dependencies from apt
    #default-jdk \
    apt-get update && apt-get install -y \
        openjdk-17-jdk \
        bash \
        curl \
        rlwrap \
        git

    # Install Clojure
    cd /installfiles
    curl -o install-clojure https://download.clojure.org/install/linux-install-${CLOJURE_TOOLS_VERSION}.sh
    chmod +x install-clojure
    ./install-clojure && rm install-clojure

    # Install Node for Vega
    curl -sL https://deb.nodesource.com/setup_16.x | bash - 
    apt-get install -y nodejs 
    npm install -g npm

    # Install further dependencies for Vega
    apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

    # Install Vega cli for oz
    # npm --global config set user root && npm --global install vega vega-lite vega-cli
    npm --location=global install vega vega-lite vega-cli

    # Install Python
    apt-get update && apt-get install -y \
        make \
        build-essential \
        libssl-dev \
        zlib1g-dev \
        libbz2-dev \
        libreadline-dev \
        libsqlite3-dev \
        wget \
        curl \
        llvm \
        libncursesw5-dev \
        xz-utils \
        tk-dev \
        libxml2-dev \
        libxmlsec1-dev \
        libffi-dev \
        liblzma-dev \
        git
    export PYENV_ROOT="/installfiles/.pyenv"
    export PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"
    curl https://pyenv.run | bash
    pyenv install 3.9.13
    pyenv global 3.9.13

    # Install Python dependencies
    pip3 install --upgrade pip
    pip3 install --upgrade wheel
    pip3 install -r requirements.txt
    

%runscript
    echo "runscript"
