{:paths   ["src" "resources"]
 :deps    {amalloy/ring-buffer {:mvn/version "1.3.1"}
           ch.qos.logback/logback-classic {:mvn/version "1.3.0-alpha14"}
           cli-matic/cli-matic {:mvn/version "0.5.3"}
           metasoarous/oz {:mvn/version "2.0.0-alpha5"}
           org.apache.commons/commons-compress {:mvn/version "1.21"}
           org.apache.commons/commons-math3 {:mvn/version "3.6.1"
                                             :exclusions [org.slf4j/slf4j-log4j12]}
           org.apache.parquet/parquet-hadoop {:mvn/version "1.12.2"
                                              :exclusions [org.slf4j/slf4j-log4j12]}
           org.apache.hadoop/hadoop-client {:mvn/version "3.3.2"
                                            :exclusions [org.slf4j/slf4j-log4j12]}
           org.apache.arrow/arrow-vector {:mvn/version "7.0.0"}
           org.clojure/clojure {:mvn/version "1.11.1"}
           org.clojure/core.async {:mvn/version "1.3.610"}
           org.clojure/data.csv {:mvn/version "1.0.0"}
           org.clojure/data.json {:mvn/version "2.4.0"}
           org.clojure/tools.logging {:mvn/version "1.0.0"}
           org.slf4j/slf4j-api {:mvn/version "2.0.0-alpha7"}
           org.zeroturnaround/zt-exec {:mvn/version "1.12"}
           scicloj/tablecloth {:mvn/version "6.089"}
           techascent/tech.ml.dataset {:mvn/version "6.090"}}
 :aliases {; -- tools.build uberjar ---
           ; clj -T:build uber
           :build {:deps {io.github.clojure/tools.build {:git/tag "v0.8.2" :git/sha "ba1a2bf"}}
                   :ns-default build}

           ;-- How to invoke the Jar --
           ;java -XX:+UseG1GC -XX:ParallelGCThreads=8 -cp solpred.jar clojure.main -m solpred.core dataset --config-path config.edn 
           ;java -XX:+UseG1GC -XX:ParallelGCThreads=8 -cp solpred.jar clojure.main -m solpred.core clean --threshold-mb 10.1 --base-dir x
           ;java -XX:+UseG1GC -XX:ParallelGCThreads=8 -cp solpred.jar clojure.main -m solpred.core clean-results --base-path /work --dry-run
           ;java -XX:+UseG1GC -XX:ParallelGCThreads=8 -cp solpred.jar clojure.main -m solpred.core verify --dataset blackmountain
           ;java -XX:+UseG1GC -XX:ParallelGCThreads=8 -cp solpred.jar clojure.main -m solpred.core launch --dataset blackmountain-round --model-name fully-conv --script-name fully_conv.py --run-dir bmr-fc-run --launch-dir bmr-fc-launch --term-list "[2 16]" --spacing-list "[60]" --horizon-list "[420]" --img-width 64 --crop-size 768 --folds 3 --lr-list "[3e-6]"

           ; -- cider nREPL --
           ;clj -M:cider-clj -P -- to resolve all dependencies --
           :cider-clj {:extra-deps {cider/cider-nrepl {:mvn/version "0.28.5"}}
                       :main-opts ["-m" "nrepl.cmdline" "--middleware" "[cider.nrepl/cider-middleware]"]
                       :jvm-opts ["-XX:MaxRAMPercentage=75.0"]}
           ; -- tests --
           ;clojure -X:test
           :test {:extra-paths ["test"]
                  :extra-deps {io.github.cognitect-labs/test-runner
                               {:git/tag "v0.5.0" :git/sha "b3fd0d2"}}
                  :main-opts ["-m" "cognitect.test-runner"]
                  :exec-fn cognitect.test-runner.api/test}}}
